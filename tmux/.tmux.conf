# ______
#|_   _| __ ___  _   ___  __
#  | || '_ ` _ \| | | \ \/ /
#  | || | | | | | |_| |>  <
#  |_||_| |_| |_|\__,_/_/\_\
#
# Example .tmux.conf
#
# By Nicholas Marriott. Public domain.
#
# ---------------------------------------
# Some tweaks to the status line
#       﫢 

# weather
WEATHER='#(curl -s wttr.in?format\="%%c%%F0%%9F%%8C%%A1+%%t+%%F0%%9F%%8C%%AC+%%w&period=600")'
#WEATHER='#(curl -s wttr.in?format\="%%C%%F0%%9F%%8C%%A1%%20%%t%%20%%F0%%9F%%8C%%AC%%20%%w&period=600")'
#WEATHER='#(curl -m 7 wttr.in?format=2 2>/dev/null; sleep 7200)'
#WEATHER='#(curl -m 3 wttr.in?format="%%c%%t%%w\n" 2>/dev/null; sleep 7200)'

set -g status-right "#{prefix_highlight} #[fg=#fbbe2e] #[default]#[fg=#f0616e] #(whoami)#[default]\
	⏽#{battery_color_fg}#[bg=#242631]Batt: #{battery_icon} #{battery_percentage} \
	#{battery_remain}#[default]⏽#{cpu_fg_color}﬙ CPU: #{cpu_icon} #{cpu_percentage}#[default]⏽#[fg=#ff8b25]${WEATHER}\
	#[default]⏽#[fg=#80d8ce] %H:%M"
set -g status-left "#[fg=#6DCBFA][#{session_name}] "
set -g window-status-current-style "underscore"
set -g status-right-length 200
# prefix+I install, prefix+U update plugins, prefix+alt+u remove/uninstall plugin
# List of plugins
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# enable continuum
set -g @continuum-restore 'on'
# restore config
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell '~/.tmux/plugins/tpm/tpm'

# tmux-cpu
#run-shell ~/Tmux/tmux-cpu/cpu.tmux
set -g @cpu_low_icon "=" # icon when cpu is low
set -g @cpu_medium_icon "≡" # icon when cpu is medium
set -g @cpu_high_icon "≣" # icon when cpu is high 
set -g @batt_icon_charge_tier8 ''
set -g @batt_icon_charge_tier7 ''
set -g @batt_icon_charge_tier6 ''
set -g @batt_icon_charge_tier5 ''
set -g @batt_icon_charge_tier4 ''
set -g @batt_icon_charge_tier3 ''
set -g @batt_icon_charge_tier2 ''
set -g @batt_icon_charge_tier1 ''
set -g @batt_icon_status_charging ''
set -g @batt_icon_status_charged ' '

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
#set -g status-bg red
set -g status-bg orange
%endif

# fix nvim insert cursor shape
#set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Enable RGB colour if running in xterm(1)
#Change the default $TERM to tmux-256color
#set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
#set -as terminal-overrides ",gnome*:Tc"

# No bells at all
set -g bell-action none

# Keep windows around after they exit
set -g remain-on-exit on

set -s escape-time 1

#TODO allow extended keys with C-i
set -s extended-keys always
set -as terminal-features 'xterm*:extkeys'
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_vim="children=(); i=0; pids=( $(ps -o pid=,tty= | grep -iE '#{s|/dev/||:pane_tty}' | awk '\{print $1\}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

#bind-key -T virt C-i if-shell -F "$is_vim" "send-keys Escape '[105;5u'" "send-keys -H 09" \; set key-table root
#bind-key -n C-i   if-shell  "$is_vim" "send-keys Escape '[105;5u'" "send-keys -H 09"

# Change the prefix key to C-z
set -g prefix C-z
unbind C-b
bind C-z send-prefix
# clear history enable vim use C-l
#bind -n C-l clear-history
bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "clear-history"

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# split the current pane, set percent of size
#bind '"' split-window -c "#{pane_current_path}" 
#bind % split-window -h -c "#{pane_current_path}" -p 40
bind | split-window -h -c "#{pane_current_path}" -p 40
bind - split-window -v -c "#{pane_current_path}"

# Some extra key bindings to select higher numbered windows
bind F1 selectw -t:10
bind F2 selectw -t:11
bind F3 selectw -t:12
bind F4 selectw -t:13
bind F5 selectw -t:14
bind F6 selectw -t:15
bind F7 selectw -t:16
bind F8 selectw -t:17
bind F9 selectw -t:18
bind F10 selectw -t:19
bind F11 selectw -t:20
bind F12 selectw -t:21

# A key to toggle between smallest and largest sizes if a window is visible in
# multiple places
bind F set -w window-size

# Keys to toggle monitoring activity in a window and the synchronize-panes option
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# Create a single default session - because a session is created here, tmux
# should be started with "tmux attach" rather than "tmux new"
# new -d -s0 -nirssi 'exec irssi'
# set -t0:0 monitor-activity on
# set  -t0:0 aggressive-resize on
# neww -d -ntodo 'exec emacs ~/TODO'
# setw -t0:1 aggressive-resize on
# neww -d -nmutt 'exec mutt'
# setw -t0:2 aggressive-resize on
# neww -d
# neww -d
# neww -d

# ---------------------------------------------------
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D
bind-key -n M-Left   if-shell  "$is_vim"  "send-keys M-Left"   "select-pane -L"
bind-key -n M-Right   if-shell  "$is_vim"  "send-keys M-Right"   "select-pane -R"
bind-key -n M-Up   if-shell  "$is_vim"  "send-keys M-Up"   "select-pane -U"
bind-key -n M-Down   if-shell  "$is_vim"  "send-keys M-Down"   "select-pane -D"

# set-window-option -g window-status-current-style fg=white
# set-window-option -g window-status-current-style bg=red
# set-window-option -g window-status-current-style bright

# default statusbar colors
set -g status-fg white
#dracula '#282A36' ayu mirage '#1F2430'
set -g status-bg '#1F2430'
set -g status-style bright


# default window title colors
set-window-option -g window-status-style fg=white
set-window-option -g window-status-style bg=default
set-window-option -g window-status-style dim

# active window title colors
set-window-option -g window-status-current-style fg=white
set-window-option -g window-status-current-style bg=default
set-window-option -g window-status-current-style bright

# Highlight active window
set-window-option -g window-status-current-style bg=red
#set-window-option -g window-status-current-style bg=#fbbe2e

set -g status-justify left

setw -g monitor-activity on

set -g default-command /bin/zsh

set-option -g focus-events on


#bind-key -n C-` run-shell 'toggle-tmux-popup'

# set clipboard
#set-window-option -g mode-keys vi
#bind-key -T copy-mode-vi v send -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
#set-option -g default-command "reattach-to-user-namespace -l zsh"
#tmux_conf_copy_to_os_clipboard=true

# Fig Tmux Integration: Enabled
source-file ~/.fig/tmux
# End of Fig Tmux Integration
